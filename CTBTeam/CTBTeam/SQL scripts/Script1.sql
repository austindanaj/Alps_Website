/*
Deployment script for Alps

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Alps"
:setvar DefaultFilePrefix "Alps"
:setvar DefaultDataPath "C:\Users\alna173017\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\alna173017\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO

IF (SELECT OBJECT_ID('tempdb..#tmpErrors')) IS NOT NULL DROP TABLE #tmpErrors
GO
CREATE TABLE #tmpErrors (Error int)
GO
SET XACT_ABORT ON
GO
SET TRANSACTION ISOLATION LEVEL READ COMMITTED
GO
BEGIN TRANSACTION
GO
PRINT N'Dropping [dbo].[FK_Reporter_to_alna]...';


GO
ALTER TABLE [dbo].[IssueList] DROP CONSTRAINT [FK_Reporter_to_alna];


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Dropping [dbo].[FK_Assignee_to_alna]...';


GO
ALTER TABLE [dbo].[IssueList] DROP CONSTRAINT [FK_Assignee_to_alna];


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
/*
The column [dbo].[IssueList].[Satus] is being dropped, data loss could occur.

The column [dbo].[IssueList].[Status] on table [dbo].[IssueList] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.
*/
GO
PRINT N'Starting rebuilding table [dbo].[IssueList]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_IssueList] (
    [Id]       INT            IDENTITY (1, 1) NOT NULL,
    [Category] NVARCHAR (50)  NOT NULL,
    [Severity] NCHAR (10)     NOT NULL,
    [Summary]  NVARCHAR (MAX) NOT NULL,
    [Due_Date] DATE           NULL,
    [Status]   NVARCHAR (50)  NOT NULL,
    [Updated]  DATE           NOT NULL,
    [Reporter] INT            NOT NULL,
    [Assignee] INT            NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[IssueList])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_IssueList] ON;
        INSERT INTO [dbo].[tmp_ms_xx_IssueList] ([Id], [Category], [Severity], [Summary], [Due_Date], [Updated], [Reporter], [Assignee])
        SELECT   [Id],
                 [Category],
                 [Severity],
                 [Summary],
                 [Due_Date],
                 [Updated],
                 [Reporter],
                 [Assignee]
        FROM     [dbo].[IssueList]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_IssueList] OFF;
    END

DROP TABLE [dbo].[IssueList];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_IssueList]', N'IssueList';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Creating [dbo].[FK_Reporter_to_alna]...';


GO
ALTER TABLE [dbo].[IssueList] WITH NOCHECK
    ADD CONSTRAINT [FK_Reporter_to_alna] FOREIGN KEY ([Reporter]) REFERENCES [dbo].[Employees] ([Alna_num]);


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Creating [dbo].[FK_Assignee_to_alna]...';


GO
ALTER TABLE [dbo].[IssueList] WITH NOCHECK
    ADD CONSTRAINT [FK_Assignee_to_alna] FOREIGN KEY ([Assignee]) REFERENCES [dbo].[Employees] ([Alna_num]);


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO

IF EXISTS (SELECT * FROM #tmpErrors) ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT>0 BEGIN
PRINT N'The transacted portion of the database update succeeded.'
COMMIT TRANSACTION
END
ELSE PRINT N'The transacted portion of the database update failed.'
GO
DROP TABLE #tmpErrors
GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[IssueList] WITH CHECK CHECK CONSTRAINT [FK_Reporter_to_alna];

ALTER TABLE [dbo].[IssueList] WITH CHECK CHECK CONSTRAINT [FK_Assignee_to_alna];


GO
PRINT N'Update complete.';


GO
